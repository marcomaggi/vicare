* Overall project goals

** Document the assembler

** Document the compiler

** Document undocumented functions

* Code known to be reviewed

** ikarus.io.ss

   Solve all the FIXME issues

   If SET-PORT-POSITION!  fails it is  possible for the field POS of the
   cookie to become invalid.  Should the port be marked as corrupted?

** list of Scheme files still to review

   scheme/ikarus.fixnums.ss
   scheme/ikarus.numerics.ss

   scheme/ikarus.exceptions.ss
   scheme/ikarus.debugger.ss

   scheme/ikarus.code-objects.ss
   scheme/ikarus.collect.ss
   scheme/ikarus.control.ss
   scheme/ikarus.date-string.ss
   scheme/ikarus.fasl.ss
   scheme/ikarus.fasl.write.ss
   scheme/ikarus.hash-tables.ss
   scheme/ikarus.multiple-values.ss
   scheme/ikarus.pretty-formats.ss
   scheme/ikarus.pretty-print.ss
   scheme/ikarus.singular-objects.ss
   scheme/ikarus.sort.ss
   scheme/ikarus.time-and-date.ss
   scheme/ikarus.timer.ss
   scheme/ikarus.unicode-conversion.ss
   scheme/ikarus.unicode.ss
   scheme/ikarus.writer.ss

   scheme/ikarus.compiler.ss
   scheme/ikarus.compiler.altcogen.ss
   scheme/ikarus.compiler.ontology.ss
   scheme/ikarus.compiler.optimize-letrec.ss
   scheme/ikarus.compiler.source-optimizer.ss
   scheme/ikarus.compiler.tag-annotation-analysis.ss
   scheme/pass-specify-rep.ss
   scheme/pass-specify-rep-primops.ss
   scheme/ikarus.intel-assembler.ss

   scheme/psyntax.builders.ss
   scheme/psyntax.compat.ss
   scheme/psyntax.config.ss
   scheme/psyntax.expander.ss
   scheme/psyntax.internal.ss
   scheme/psyntax.library-manager.ss

** list of Scheme files that maybe will be reviewed

   scheme/x86-64-repl.ss


** list of C code that must be reviewed

*** ikarus-numerics.c

    Only partially  reviewed.  From "ikrt_bnbnplus()"  on, the functions
    must be reviewed using the C preprocessor macros in the header file.
    Tests for the functions must go in "test-vicare-bignums.sps".

* Miscellaneous stuff to be fixed

** ikarus.io.ss

*** Crash because of "invalid frame size"

   Something is causing an "invalid  frame size" error with some builds.
   I guess it is caused by something in the I/O module, particularly the
   guardian used to close garbage  collected ports.  For this reason the
   the  guardian cleanup function  closes the  port wihout  flushing the
   output buffer.  Once fixed, the call must be reincluded.

** ikarus.symbols.ss

   The name of  generated symbols embeds a numeric  counter which is the
   stringification of a fixnum.   What if generating many symbols causes
   the counter to overflow the fixnums?

** ikarus-collect.c

   The moving  operation for structs in  "add_object_proc()" is suspect:
   what the hell is going  on there?  Understand, document and if needed
   fix it.

* List of functions to be documented

  Some of  these may  be internal functions  which must be  removed from
  "makefile.sps".  Not  all the undocumented functions  are listed here,
  only the ones known not to be documented.

** low level

   $flonum-sbe
   $init-symbol-function!

** ikarus.symbols.ss

   gensym-count
   top-level-value top-level-bound? set-top-level-value!
   reset-symbol-proc! system-value system-value-gensym

* List of functions to be tested

  The flonum getters  and setters in the bytevector  library should have
  tests in "test-vicare-bytevectors.sps".

* Stuff to think about for the future

** Introduce immutable datums

   Strings  and  bytevectors  read   from  the  source  code  should  be
   immutable.

** Unique strings in compiled code

   Equal strings read from different places in the source code should be
   stored only once in the FASL file.

** Inline assembly

   Is it possible  and convenient to replace assembly  code inlined in C
   sources with code generated by GNU Lightning?

** Foreign functions interface

   Crazy?  Is  it possible  to replace the  dependency upon  libffi with
   code generated at runtime by GNU Lightning?

** Event loop

   Optionally rely on libev for a sophisticated internal event loop?

** glibc interesting functions

*** asynchronous input/output

    Could it work with Vicare?

** Linux interesting functions

* end

### end of file
# Local Variables:
# coding: utf-8-unix
# End:
