This directory contains the Gambit benchmarks and benchmarking
infrastructure, written by Marc Feeley.  Will Clinger has hacked
it up to run benchmarks on the machines used by the Larceny
project, and has added several benchmarks beyond those
distributed with Gambit.  Abdulaziz Ghuloum converted them to
R6RS libraries and added an ikarus-specific bench.ss for running
the benchmarks under ikarus.

Files and directories:

  * bench.ss: a script for running a benchmark
  * benchall.ss: a script for running all benchmarks
  * rnrs-benchmarks.ss: a library specifing the number of
    iterations that every benchmark should be run and some
    procedures (like run-benchmark) that the various benchmarks
    use.
  * rnrs-benchmarks/*: the actual benchmark libraries.
  * rn100, bib, parsing-data.ss: used by some benchmarks.

To run a benchmark, type:

  $ ikarus --r6rs-script bench.ss <benchmark-name>

  Example:
  
    $ ikarus --r6rs-script bench.ss nucleic
    running stats for compile-nucleic:
        7 collections
        262 ms elapsed cpu time, including 84 ms collecting
        262 ms elapsed real time, including 84 ms collecting
        30095456 bytes allocated
    running stats for nucleic:
        154 collections
        840 ms elapsed cpu time, including 77 ms collecting
        842 ms elapsed real time, including 78 ms collecting
        640581192 bytes allocated

To run all benchmarks, type:

  $ ikarus --r6rs-script benchall.ss

Or, alternatively, run `make benchall` to run all benchmarks and 
append the results to the file 'timelog'.
  


The text that Ikarus's "time" macro and "time-it" procedure
output is modeled after Chez Scheme's in order to facilitate
interoperability with tools that parse benchmark data.

BUGS: 
  maze and nbody do not work yet because they require bitwise-and 
  and make-polar.

Aziz,,,
